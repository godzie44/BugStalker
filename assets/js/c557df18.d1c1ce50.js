"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[914],{3752:(e,n,t)=>{t.d(n,{A:()=>s});var i=t(6540),a=t(4848);function s(e){let{src:n,options:t={}}=e;const s=(0,i.useRef)(null),[r,c]=(0,i.useState)(!1);return(0,i.useEffect)((()=>{if("undefined"==typeof window)return;const e="asciinema-player-css";if(!document.getElementById(e)){const n=document.createElement("link");n.id=e,n.rel="stylesheet",n.href="https://cdn.jsdelivr.net/npm/@asciinema/player@3.0.0/dist/themes/asciinema-player.css",document.head.appendChild(n)}const i="asciinema-player-script";let a=document.getElementById(i);a||(a=document.createElement("script"),a.id=i,a.src="https://cdn.jsdelivr.net/npm/@asciinema/player@3.0.0/dist/asciinema-player.min.js",a.async=!0,document.body.appendChild(a));const r=()=>{if(!window.AsciinemaPlayer)return void console.error("AsciinemaPlayer not available");const e=n.startsWith("http")?n:`${window.location.origin}${n}`;try{window.AsciinemaPlayer.create(e,s.current,{cols:120,rows:24,autoPlay:!0,fit:"width",...t}),c(!0)}catch(i){console.error("Player initialization failed:",i)}};return window.AsciinemaPlayer?r():a.onload=r,()=>{s.current&&(s.current.innerHTML="")}}),[n,t]),(0,a.jsx)("div",{ref:s,style:{minHeight:"300px",backgroundColor:r?"transparent":"#f5f5f5",borderRadius:"4px",margin:"20px 0",position:"relative"},children:!r&&(0,a.jsx)("div",{style:{position:"absolute",top:"50%",left:"50%",transform:"translate(-50%, -50%)",color:"#666"},children:"Loading player..."})})}},5363:(e,n,t)=>{t.d(n,{A:()=>s});t(6540);var i=t(9136),a=t(4848);function s(e){let{children:n,fallback:t}=e;return(0,i.A)()?(0,a.jsx)(a.Fragment,{children:n?.()}):t??null}},8191:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>i,toc:()=>u});const i=JSON.parse('{"id":"capabilities/call","title":"Call a function","description":"Overview of the call command.","source":"@site/docs/capabilities/call.mdx","sourceDirName":"capabilities","slug":"/capabilities/call","permalink":"/BugStalker/docs/capabilities/call","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/capabilities/call.mdx","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Working with registers","permalink":"/BugStalker/docs/capabilities/examine_data/register"},"next":{"title":"Async","permalink":"/BugStalker/docs/category/async"}}');var a=t(4848),s=t(8453),r=t(5363),c=t(3752);const l={sidebar_position:5},o="Call a function",d={},u=[{value:"<code>call</code> command",id:"call-command",level:2},{value:"Usage example",id:"usage-example",level:2}];function p(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"call-a-function",children:"Call a function"})}),"\n",(0,a.jsxs)(n.p,{children:["Overview of the ",(0,a.jsx)(n.code,{children:"call"})," command."]}),"\n",(0,a.jsxs)(n.h2,{id:"call-command",children:[(0,a.jsx)(n.code,{children:"call"})," command"]}),"\n",(0,a.jsxs)(n.p,{children:["You can call a function in a debugged program using the ",(0,a.jsx)(n.code,{children:"call"})," command:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"call <function_name> [arg 1] ... [arg N]"})," - calls the specified function with the given arguments"]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Note"}),": this command is in early implementation, so please check ",(0,a.jsx)(n.code,{children:"help call"})," to understand its current limitations."]}),"\n",(0,a.jsx)(n.h2,{id:"usage-example",children:"Usage example"}),"\n",(0,a.jsx)(n.p,{children:"Consider this Rust program:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-rust",children:'fn sum2(a: u64, b: u64) {\n    println!("my sum is {}", a + b);\n}\n\nfn print_bool(b: bool) {\n    println!("bool is {}", b);\n}\n\nfn main() {\n    sum2(1, 2);\n    print_bool(true);\n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Let's call ",(0,a.jsx)(n.code,{children:"sum2"})," and ",(0,a.jsx)(n.code,{children:"print_bool"})," functions:"]}),"\n","\n",(0,a.jsx)(r.A,{children:()=>(0,a.jsx)(c.A,{src:"/BugStalker/casts/call.cast"})})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>c});var i=t(6540);const a={},s=i.createContext(a);function r(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);