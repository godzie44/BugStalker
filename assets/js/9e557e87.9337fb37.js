"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[412],{2506:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>d,metadata:()=>a,toc:()=>h});const a=JSON.parse('{"id":"capabilities/examine_state/backtrace_thread_and_frame","title":"Examining stack and threads","description":"Overview of the backtrace, thread and frame commands.","source":"@site/docs/capabilities/examine_state/backtrace_thread_and_frame.mdx","sourceDirName":"capabilities/examine_state","slug":"/capabilities/examine_state/backtrace_thread_and_frame","permalink":"/BugStalker/docs/capabilities/examine_state/backtrace_thread_and_frame","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/capabilities/examine_state/backtrace_thread_and_frame.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Examine state","permalink":"/BugStalker/docs/category/examine-state"},"next":{"title":"Examining source files","permalink":"/BugStalker/docs/capabilities/examine_state/source"}}');var r=t(4848),i=t(8453),s=t(5363),c=t(3752);const d={sidebar_position:1},o="Examining stack and threads",l={},h=[{value:"Examining the execution state using <code>backtrace</code>, <code>thread</code> and <code>frame</code> commands",id:"examining-the-execution-state-using-backtrace-thread-and-frame-commands",level:2},{value:"Change current frame and thread",id:"change-current-frame-and-thread",level:2},{value:"Usage example",id:"usage-example",level:2}];function m(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"examining-stack-and-threads",children:"Examining stack and threads"})}),"\n",(0,r.jsxs)(n.p,{children:["Overview of the ",(0,r.jsx)(n.code,{children:"backtrace"}),", ",(0,r.jsx)(n.code,{children:"thread"})," and ",(0,r.jsx)(n.code,{children:"frame"})," commands."]}),"\n",(0,r.jsxs)(n.h2,{id:"examining-the-execution-state-using-backtrace-thread-and-frame-commands",children:["Examining the execution state using ",(0,r.jsx)(n.code,{children:"backtrace"}),", ",(0,r.jsx)(n.code,{children:"thread"})," and ",(0,r.jsx)(n.code,{children:"frame"})," commands"]}),"\n",(0,r.jsx)(n.p,{children:"When your program stops, the first thing you need to know is where it stopped and how it got there. These commands can help you investigate:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"frame info"})," - displays information about the currently selected frame"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"thread info"})," - lists information about all threads"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"thread current"})," - shows the currently selected thread"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"backtrace"})," (bt) - shows the backtrace of the current thread, including:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Thread number and PID"}),"\n",(0,r.jsx)(n.li,{children:"Instruction address where execution stopped"}),"\n",(0,r.jsx)(n.li,{children:"All frames from the current execution frame (frame 0) up through the call stack"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"backtrace all"})," (bt all) - shows backtraces for all active threads"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"change-current-frame-and-thread",children:"Change current frame and thread"}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)("summary",{children:"What is stack frame?"}),(0,r.jsx)(n.p,{children:"The call stack is divided into contiguous pieces called stack frames. Each frame contains the data associated with one function call, including:"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"the function's arguments"}),"\n",(0,r.jsx)(n.li,{children:"its local variables"}),"\n",(0,r.jsx)(n.li,{children:"the return address"}),"\n"]}),(0,r.jsx)(n.p,{children:"All stack frames are allocated in a memory region called the call stack."})]}),"\n",(0,r.jsxs)(n.p,{children:["When a program stops, the frame and thread where execution halted become the current frame and current thread.\nMost of commands operate on these current elements.\nFor example, ",(0,r.jsx)(n.code,{children:"var locals"})," prints all local variables in the current frame. If you switch to a different frame,\n",(0,r.jsx)(n.code,{children:"var locals"})," will display the variables from that function's context."]}),"\n",(0,r.jsxs)(n.p,{children:["You can change the current thread or frame by specifying its number (check it using ",(0,r.jsx)(n.code,{children:"frame info"})," or ",(0,r.jsx)(n.code,{children:"thread info"})," commands):"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"frame switch <number>"})," - changes the current frame"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"thread switch <number>"})," - changes the current thread"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"usage-example",children:"Usage example"}),"\n",(0,r.jsx)(n.p,{children:"Consider this Rust code:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:"pub fn main() {\n    for i in 1..3 {\n        std::thread::spawn(move || {\n            infinite_inc(i);\n        });\n    }\n    \n    std::thread::sleep(std::time::Duration::from_secs(10));\n}\n\nfn infinite_inc(step: u32) {\n     let mut cntr = 0;\n     loop {\n        cntr += step;\n     }\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"Lets try to stop this program, view current frame and thread, inspect the backtrace, change current thread and frame and observe local variables."}),"\n","\n",(0,r.jsx)(s.A,{children:()=>(0,r.jsx)(c.A,{src:"/BugStalker/casts/thread_frame_bt.cast"})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}},3752:(e,n,t)=>{t.d(n,{A:()=>i});var a=t(6540),r=t(4848);function i(e){let{src:n,options:t={}}=e;const i=(0,a.useRef)(null),[s,c]=(0,a.useState)(!1);return(0,a.useEffect)((()=>{if("undefined"==typeof window)return;const e="asciinema-player-css";if(!document.getElementById(e)){const n=document.createElement("link");n.id=e,n.rel="stylesheet",n.href="https://cdn.jsdelivr.net/npm/@asciinema/player@3.0.0/dist/themes/asciinema-player.css",document.head.appendChild(n)}const a="asciinema-player-script";let r=document.getElementById(a);r||(r=document.createElement("script"),r.id=a,r.src="https://cdn.jsdelivr.net/npm/@asciinema/player@3.0.0/dist/asciinema-player.min.js",r.async=!0,document.body.appendChild(r));const s=()=>{if(!window.AsciinemaPlayer)return void console.error("AsciinemaPlayer not available");const e=n.startsWith("http")?n:`${window.location.origin}${n}`;try{window.AsciinemaPlayer.create(e,i.current,{cols:120,rows:24,autoPlay:!0,fit:"width",...t}),c(!0)}catch(a){console.error("Player initialization failed:",a)}};return window.AsciinemaPlayer?s():r.onload=s,()=>{i.current&&(i.current.innerHTML="")}}),[n,t]),(0,r.jsx)("div",{ref:i,style:{minHeight:"300px",backgroundColor:s?"transparent":"#f5f5f5",borderRadius:"4px",margin:"20px 0",position:"relative"},children:!s&&(0,r.jsx)("div",{style:{position:"absolute",top:"50%",left:"50%",transform:"translate(-50%, -50%)",color:"#666"},children:"Loading player..."})})}},5363:(e,n,t)=>{t.d(n,{A:()=>i});t(6540);var a=t(9136),r=t(4848);function i(e){let{children:n,fallback:t}=e;return(0,a.A)()?(0,r.jsx)(r.Fragment,{children:n?.()}):t??null}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>c});var a=t(6540);const r={},i=a.createContext(r);function s(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);